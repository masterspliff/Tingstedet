name: Deploy to Azure
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '9.x'
          
      # Build and publish server
      - name: Clean Server
        run: dotnet clean ./server.sln

      - name: Restore Server dependencies
        run: dotnet restore ./server.sln

      - name: Build Server
        run: dotnet build ./server.sln --configuration Release --no-restore
      
      - name: Publish Server
        run: dotnet publish ./server.sln -c Release -o ${{env.DOTNET_ROOT}}/server

      # Build and publish webapp
      - name: Clean Webapp
        run: dotnet clean ./webapp.sln

      - name: Restore Webapp dependencies
        run: dotnet restore ./webapp.sln

      - name: Build Webapp
        run: dotnet build ./webapp.sln --configuration Release --no-restore
      
      - name: Publish Webapp
        run: dotnet publish ./webapp.sln -c Release -o ${{env.DOTNET_ROOT}}/webapp
      
      # Azure Login with OIDC
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      # Deploy Server (Development)
      - name: Deploy Server to Azure Web App (Development)
        if: github.ref == 'refs/heads/main'
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'tingstedet-api'
          package: ${{env.DOTNET_ROOT}}/server
      
      # Deploy Blazor App (Development)
      - name: Deploy Blazor to Azure Web App (Development)
        if: github.ref == 'refs/heads/main'
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'tingstedet'
          package: ${{env.DOTNET_ROOT}}/webapp
